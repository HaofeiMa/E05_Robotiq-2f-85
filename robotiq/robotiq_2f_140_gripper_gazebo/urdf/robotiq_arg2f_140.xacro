<?xml version="1.0"?>
<robot name="robotiq_arg2f_140_gazebo" xmlns:xacro="http://ros.org/wiki/xacro">
  <!--
    This is a top-level xacro instantiating the Gazebo-specific version of the
    'robotiq_arg2f_140_gripper' macro (ie: 'robotiq_arg2f_140_gripper_gazebo') and passing it values for all its
    required arguments.

    This file should be considered the Gazebo-specific variant of the file
    with the same name in the robotiq_2f_140_gripper_visualization package. It accepts the same
    arguments, but instead of configuring everything for a real robot, will
    generate a Gazebo-compatible URDF with a ros_control hardware_interface
    attached to it.

    Only use this top-level xacro if you plan on spawning the gripper in Gazebo
    'by itself', without any gripper or any other geometry attached.

    If you need to attach it to a robot and integrate it into a larger workcell and want to spawn that as a single entity in
    Gazebo, DO NOT EDIT THIS FILE.

    Instead: create a new top-level xacro, give it a proper name, include the
    required '.xacro' files, instantiate the models (ie: call the macros) and
    connect everything by adding the appropriate joints.
  -->

  <!--
    Import main macro.

    NOTE: this imports the Gazebo-wrapper main macro, NOT the regular
          xacro macro (which is hosted by robotiq_2f_140_gripper_visualization).
  -->
   <!-- import main macro -->
  <xacro:include filename="$(find robotiq_2f_140_gripper_gazebo)/urdf/robotiq_arg2f_140_macro.xacro" />

  <!-- parameters -->
  <xacro:arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface"/>
  <!--
    legal values:
      - hardware_interface/PositionJointInterface
      - hardware_interface/EffortJointInterface

    NOTE: this value must correspond to the controller configured in the
          controller .yaml files in the 'config' directory.
  -->

  <!-- gripper -->
  <xacro:robotiq_arg2f_140_gazebo 
    prefix=""
    transmission_hw_interface="$(arg transmission_hw_interface)"/>

  <!--
    Attach the Gazebo model to Gazebo's world frame.
  -->
  <link name="world"/>
  <joint name="world_joint" type="fixed">
    <parent link="world"/>
    <child link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>
</robot>
